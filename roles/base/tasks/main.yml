- name: Locks root password
  command: passwd -l root

- name: Installs packages
  apt: pkg={{ item }}
       state=latest
       update_cache=yes
       cache_valid_time=300
  with_items:
    - ansible
    - fail2ban
    - lxc
    - netfilter-persistent
    - openssh-server
    - unattended-upgrades
    - vim
    - virtualenv

- name: Adds authorized key
  authorized_key: user={{ user }}
                  key="{{ ssh_public_key }}"

- name: Disallows ssh password authentication
  lineinfile: dest=/etc/ssh/sshd_config
              regexp="^PasswordAuthentication"
              line="PasswordAuthentication no"
              state=present
  notify: Restart ssh

- name: Ensures iptables directory exists
  file: path=/etc/iptables/
        state=directory
        owner=root
        group=root
        mode=755

- name: Installs fw rules
  template: src=rules.{{ item }}.j2
        dest=/etc/iptables/rules.{{ item }}
        owner=root
        group=root
        mode=0644
  with_items:
    - v4
    - v6

- service: name=netfilter-persistent state=restarted

- name: Installs bashrc additions
  copy: src=bashrc
        dest={{ item.basedir }}/.bashrc_{{ item.user }}
        owner={{ item.user }}
        group={{ item.user }}
        mode=0640
  become: yes
  become_user: "{{ item.user }}"
  with_items:
    - { user: 'root', basedir: '/root' }
    - { user: "{{ user }}", basedir: "/home/{{ user }}" }

- name: Configures bashrc to use additions
  lineinfile: dest={{ item.basedir }}/.bashrc
              line=". {{ item.basedir }}/.bashrc_{{ item.user }}"
              regexp="^. {{ item.basedir }}/.bashrc_{{ item.user }}"
  become: yes
  become_user: "{{ item.user }}"
  with_items:
    - { user: 'root', basedir: '/root' }
    - { user: "{{ user }}", basedir: "/home/{{ user }}" }

- name: Sets vi mode for shells and repls
  lineinfile: dest={{ item.basedir }}/.inputrc
              line="set editing-mode vi"
              regexp="^set editing-mode vi"
              create=yes
  become: yes
  become_user: "{{ item.user }}"
  with_items:
    - { user: 'root', basedir: '/root' }
    - { user: "{{ user }}", basedir: "/home/{{ user }}" }

- name: Restricts access to unprivileged user files
  file: path=/home/{{ user }} state=directory recurse=yes mode="o-rwx"
